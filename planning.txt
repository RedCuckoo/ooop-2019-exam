Етап 1: план:
	- обдумування та складання плану/запису нотаток - 1 година
	- опис класу Object та Image - 30 хв
	- побудова алгоритму розпізнавання для різних типів об'єктів - 2 години
	- реалізація вибірки з алгоритму/наповнення об'єктів даними - 2 години
	- графічний інтерфейс - 2 години
	- дебаг бекенду - 1 година
	- дебаг фронтенду - 1 година
Етап 2: по факту:
*для відслідковування використовував програму ManicTime*
	Загального часу - 28 годин
	Активного часу - 25 годин
	З них:
		14 годин - в середовищі розробки
		4 години - в браузері (перегляд завдання/пошук інформації)
		4 години - в Телеграмі (з них, приблизно половина пішло на обговорення завдання з одногрупниками, запитання питань викладачу)
		1 година - в Дизайнері
	Фактичний перебіг виконання завдання:
		- налаштування середовища та встановлення програми трекінгу - 1 год
		- перші два пункти по плану
		- потім виникло нерозуміння умови до кінця, на пошук інформації/запитання викладачу, обдумуванню пішло близько 1.5 години
		- при написанні поліморфізму проблем не виникло, тому типізовані об'єкти були написані доволі швидко, паралельно пишеться докуменація
		- додав для кожного типізованого об'єкту перегружену функцію та реалізував її, близько 2.5 годин, що ще теж вписувалося в план, проте уже з відхиленням
		- втомився від алгоритмів, почав писати інтерфейс
		- написання головного та діалогового вікна - 1 година десь
		- наступним кроком, вирішив почати все збирати і по ходу дописувати, як показала практика з модуля - коли бракує ідей, краще робити саме так, тому вийшло десь 2 години на нписання класу симуляції
		- десь година пішла на створення прикладу системи та її загрузка в систему, проте все складалося без серйозних проблем
		- створення вікна для перегляду результатів алгоритму для відповідних об'єктів - 0.5 години
		- реструктуризація проекту - 20 хвилин
Етап 3: аналіз:
1. Найскладнішими для розуміння є саме розуміння завдання та вибудування в голові певного плану його виконання.
Також психологічно необхідно себе змушувати писати деякі речі, яке не до кінця зрозумілі, занадто складні, тощо
2. Найпростішими є підключення графічного інтерфейсу, особливо коли вже є досвід праці з фреймворком
3. Найбільше часу зайняло скоріше за все збір інформації про виконання алгоритму
4. Найменше часу зайняло створення графічного інтерфейсу
5. Так, були, кроки про які не згадав, це планування за допомогою побудови системи. Таким чином, ти практично бачиш,що тобі потрібно
6. Непотрібних кроків не було
7. Найбільше часу зайняли саме технічні кроки
8. Інтерфейс зайняв найменше часу
9. Під час побудови симуляції виявлялося, що необхідні ті чи інші параметри, які необхідно було дописувати. Також не зовсім доцільно обрав контейнери
10.  Були моменти прозріння, після співбесіди з викладачем :)
11. Побудова системи, та підлаштування під неї може зайняти більше часу, тому необхідно відразу планувати все.
12. менше часу на інтерфейс